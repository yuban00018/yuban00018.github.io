{"meta":{"title":"曹卓文的博客","subtitle":"踩坑日记","description":"","author":"曹卓文","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"20年8-9月反思","slug":"20年8-10月反思","date":"2020-10-10T00:00:00.000Z","updated":"2020-10-10T10:07:59.887Z","comments":true,"path":"2020/10/10/20年8-10月反思/","link":"","permalink":"http://yoursite.com/2020/10/10/20%E5%B9%B48-10%E6%9C%88%E5%8F%8D%E6%80%9D/","excerpt":"","text":"不得不说时间过得真的很快，从八月开始算，正儿八经开始学计算机已经两个月了。秋季学期过去了五周，再过个两周就要开始期末复习了。感觉最近最多的抱怨就是感觉这两个月以来自己似乎没有进步，没有感觉到自己和之前有什么本质的差别。 八月概况暑假全英课程，计算机视觉与人工智能。调库完成了一个基于机器学习的人脸识别项目，充其量就是辛苦的调了好几天代码，日夜颠倒的作息。然后就是到了计算机实训。东西比较简单，水了水就A了，打了一场牛客网的比赛，但只做出来签到题。比较后悔的是暑假也没有具体的学习怎么去使用github，现在还是在使用vscode，以后有需要再补充学习命令行界面。 九月概况感觉就是非常忙活，先是CSP认证，然后是四六级考试，然后参加了一个线下的网络赛，和队友一起水了一下午。基本上九月就这么过去了。基本上每天的生活就是C++没有复习好，单词也没有背好。然后临场就上去了，CSP考了200分，刚好到可以参加复赛的水平，想想还是算了，再去也是浪费时间。 反思昨天开了组会，突然意识到一个很严重的问题。就是从八月份以来我都一直非常的焦虑。别人做什么我也做什么，别人参加ACM我也参加ACM，别人用python写爬虫我也学着用python去写爬虫，有人说golang的性能更好我就打算去学golang。一直处于一种什么都想学，然后什么都是只能跟着最新手教程套模板调用库的水平。关于某个技术也从来没有静下心去学过。C++本来是要看网上教程学好面向对象这块的，结果也没有看。打算每天每天再leetcode上面写一题，然而并没有。陷入到一种能调库绝对不自己写的错误心态当中。python确实用的挺爽，但从事实来讲，对我的代码水平毫无帮助。 打算重新规划规划，放弃掉一些不重要的事情，安排好日程。好高骛远是没有用的，避免变成调库侠。","categories":[],"tags":[{"name":"反思","slug":"反思","permalink":"http://yoursite.com/tags/%E5%8F%8D%E6%80%9D/"}]},{"title":"hexo+TravisCI建立个人博客(1)部署篇","slug":"hexo+TravisCI建立个人博客(1)部署篇","date":"2020-08-22T00:00:00.000Z","updated":"2020-10-10T10:07:59.887Z","comments":true,"path":"2020/08/22/hexo+TravisCI建立个人博客(1)部署篇/","link":"","permalink":"http://yoursite.com/2020/08/22/hexo+TravisCI%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)%E9%83%A8%E7%BD%B2%E7%AF%87/","excerpt":"","text":"说明博主使用的环境是Ubuntu20.04LTS，Node.js 14 LTS，VsCode。 本文采用Hexo+github+Travis-CI的方式建立静态博客。 参考文献本文主要采用Hexo官方中文文档的操作流程。 前期准备首先遵循官方文档，安装Hexo。需要的前置程序有Node.js以及Git。完成下载后安装Hexo： 1npm install -g hexo-cli 前期的安装流程就完成了。 在本地建站并同步到github首先在github新建一个repository，命名为 username.github.io，需要注意的是一个用户只能有一个io域名。username填入自己的用户名称。 完成这步后，在本地选择一个文件夹储存你的网站，右键打开terminal，输入： 123hexo init &lt;username.github.io&gt;cd &lt;username.github.io&gt;npm install 本地的文件夹就建立好了，在桌面上打开gitbash，clone你的项目: 1git clone https://github.com/username/username.github.io/ 打开文件夹，勾选显示不可见文件: 然后把.git文件拖入到你init的folder里面并检查 .gitignore 文件中是否包含 public 一行，如果没有在文件夹里找到.gitignore文件，可以自己加上： 1234567.DS_StoreThumbs.dbdb.json*.lognode_modules&#x2F;public&#x2F;.deploy*&#x2F; 在vscode里面选择暂存更改提交并推送，至此你的网站文件就被同步到github了。 但你会发现，你现在并不能正常访问网站，github将会显示错误信息，不用慌张，接下来我们就要解决这些问题。 本地预览*当然你也可以在本地提前预览build后的效果: 1234hexo cleanhexo ghexo dhexo s 以上命令会在本地生成一个链接，用浏览器打开就可以预览效果，返回terminal按下Ctrl+C就可以关闭。 使用Travis-CI协助部署我们上传到github的master分支的其实是我们的源文件，网页需要经过hexo generate之后才能正常显示，因此，我们采用Travis-CI协助我们自动生成静态网页。 以下引用官方教程(含小幅度修改)： 将Travis CI添加到你的 GitHub账户中。 前往 GitHub 的Applications settings配置 Travis CI 权限，使其能够访问你的 repository。 你应该会被重定向到Travis CI的页面。 在浏览器新建一个标签页，前往GitHub新建Personal Access Token，只勾选repo的权限并生成一个新的Token。Token生成后请立即复制并保存好。 回到Travis CI，前往你的 repository的设置页面，在Environment Variables下新建一个环境变量，Name为 GH_TOKEN，Value为刚才你在 GitHub 生成的 Token。确保DISPLAY VALUE IN BUILD LOG保持不被勾选避免你的Token泄漏。点击Add保存。 在你的 Hexo 站点文件夹中新建一个 .travis.yml 文件： 123456789101112131415161718sudo: falselanguage: node_jsnode_js: - 14 # use nodejs v14 LTScache: npmbranches: only: - master # build master branch onlyscript: - hexo generate # generate static filesdeploy: provider: pages skip-cleanup: true github-token: $GH_TOKEN keep-history: true on: branch: master local-dir: public 将 .travis.yml 推送到 repository 中。Travis CI 应该会自动开始运行，并将生成的文件推送到同一 repository 下的 gh-pages 分支下 在 GitHub 中前往你的 repository 的设置页面，修改 GitHub Pages 的部署分支为 gh-pages。 前往 https://username.github.io 查看你的站点是否可以访问。这可能需要一些时间。 至此，你的博客已经可以正常访问了。需要注意的是，百度是搜索不到你的博客的，因为被baidu的爬虫被ban了。 后续更新如何更换主题以及编辑第一条博客……","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]}],"categories":[],"tags":[{"name":"反思","slug":"反思","permalink":"http://yoursite.com/tags/%E5%8F%8D%E6%80%9D/"},{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]}